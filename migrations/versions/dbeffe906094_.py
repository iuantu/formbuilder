"""empty message

Revision ID: dbeffe906094
Revises: 3a7fe62f7ba2
Create Date: 2020-02-11 10:58:39.517704

"""
from alembic import op
from sqlalchemy.sql import table, select, literal_column
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'dbeffe906094'
down_revision = '3a7fe62f7ba2'
branch_labels = None
depends_on = None


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('form_collaborator',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('form_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['form_id'], ['form.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['ab_role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['ab_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    form_collaborator = table(
        'form_collaborator',
        sa.Column('form_id', sa.Integer(), nullable=True),
        sa.Column('user_id', sa.Integer(), nullable=True),
        sa.Column('role_id', sa.Integer(), nullable=True),
    )

    form_table = table(
        'form',
        sa.Column('id', sa.Integer()),
        sa.Column('user_id', sa.Integer())
    )

    role_table = table(
        'ab_role',
        sa.Column('id', sa.Integer()),
        sa.Column('name', sa.String())
    )
    connection = op.get_bind()
    manager = connection.execute(
        select([role_table.c.id, role_table.c.name])\
        .where(role_table.c.name=='Manager')
    )\
        .fetchone()

    if not manager:
        op.bulk_insert(role_table, [
            {'name': 'Viewer'},
            {'name': 'Editor'},
            {'name': 'Manager'}
        ])

        manager = connection.execute(
            select([role_table.c.id, role_table.c.name])\
            .where(role_table.c.name=='Manager')
        )\
            .fetchone()

    connection.execute(
        form_collaborator\
            .insert()\
            .from_select(
                ['form_id', 'user_id', 'role_id'],
                select([
                    form_table.c.id,
                    form_table.c.user_id,
                    literal_column(str(manager.id)).label('role_id')
                ])
            )
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('form_collaborator')
    # ### end Alembic commands ###
